Token          Lexeme
---------------------
separator      $
keyword        function
identifier     calculate_average
separator      (
identifier     scores
keyword        integer
separator      {
separator      }
separator      )
keyword        real
identifier     sum
operator       =
real           0.00
separator      ;
identifier     for
separator      (
keyword        integer
identifier     i
operator       =
integer        0
separator      ;
identifier     i
operator       <
identifier     length
separator      (
identifier     scores
separator      )
separator      ;
identifier     i
operator       =
identifier     i
operator       +
illegal        1..
separator      )
separator      {
identifier     sum
operator       =
identifier     sum
operator       +
identifier     scores
separator      {
identifier     i
separator      }
separator      ;
separator      }
identifier     endfor
keyword        integer
identifier     counter
operator       =
integer        0
separator      ;
keyword        while
separator      (
identifier     counter
operator       <
identifier     length
separator      (
identifier     scores
separator      )
separator      )
separator      {
keyword        print
separator      (
identifier     score
separator      {
identifier     counter
separator      }
separator      )
separator      ;
identifier     counter
operator       =
identifier     counter
operator       +
integer        1
separator      ;
separator      }
keyword        endwhile
keyword        print
separator      (
illegal        "
identifier     Average
illegal        "
operator       +
identifier     sum
operator       /
identifier     length
separator      (
identifier     scores
separator      )
separator      )
separator      ;
keyword        if
separator      (
identifier     length
separator      (
identifier     scores
separator      )
operator       =>
operator       =
illegal        .00
separator      )
separator      {
keyword        return
identifier     sum
operator       /
identifier     length
separator      (
identifier     scores
separator      )
separator      ;
separator      }
keyword        else
separator      {
keyword        return
integer        0
separator      ;
separator      }
keyword        endif
separator      $
