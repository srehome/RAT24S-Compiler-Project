Token	    Lexeme
SEPARATOR	$
IDENTIFIER	function
IDENTIFIER	calculate_average
SEPARATOR	(
IDENTIFIER	scores
IDENTIFIER	integer
UNKNOWN	    [
UNKNOWN	    ]
SEPARATOR	)
SEPARATOR	{}
IDENTIFIER	integer
IDENTIFIER	sum
OPERATOR	=
DIGITS  	0
SEPARATOR	;
IDENTIFIER	for
SEPARATOR	(
IDENTIFIER	i
OPERATOR	=
DIGITS  	0
SEPARATOR	;
IDENTIFIER	i
OPERATOR	<
IDENTIFIER	length
SEPARATOR	(
IDENTIFIER	scores
SEPARATOR	)
SEPARATOR	;
IDENTIFIER	i
OPERATOR	=
IDENTIFIER	i
OPERATOR	+
DIGIITS 	1
SEPARATOR	)
SEPARATOR	{
IDENTIFIER	sum
OPERATOR	=
IDENTIFIER	sum
OPERATOR	+
IDENTIFIER	scores
UNKNOWN 	[
IDENTIFIER	i
UNKNOWN 	]
SEPARATOR	;
SEPARATOR	}
IDENTIFIER	endfor
IDENTIFIER	if
SEPARATOR	(
IDENTIFIER	length
SEPARATOR	(
IDENTIFIER	scores
SEPARATOR	)
OPERATOR	>
DIGITS  	0
SEPARATOR	)
SEPARATOR	{
IDENTIFIER	return
IDENTIFIER	sum
OPERATOR	/
IDENTIFIER	length
SEPARATOR	(
IDENTIFIER	scores
SEPARATOR	)
SEPARATOR	;
SEPARATOR	}
IDENTIFIER	else
SEPARATOR	{
IDENTIFIER	return
DIGITS  	0
SEPARATOR	;
SEPARATOR	}
IDENTIFIER	endif
SEPARATOR	$